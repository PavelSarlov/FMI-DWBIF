-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-01-26 00:32:42 EET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE h_account (
    id         SERIAL NOT NULL,
    loaded_at  DATE NOT NULL,
    source     VARCHAR(50) NOT NULL,
    account_id SERIAL NOT NULL
);

ALTER TABLE h_account ADD CONSTRAINT h_account_pk PRIMARY KEY ( id );

CREATE TABLE h_client (
    id        SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50) NOT NULL,
    client_id SERIAL NOT NULL
);

ALTER TABLE h_client ADD CONSTRAINT h_client_pk PRIMARY KEY ( id );

CREATE TABLE h_credit_card (
    id        SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50),
    card_id   SERIAL NOT NULL
);

ALTER TABLE h_credit_card ADD CONSTRAINT h_credit_card_pk PRIMARY KEY ( id );

CREATE TABLE h_demographic (
    id          SERIAL NOT NULL,
    loaded_at   DATE NOT NULL,
    source      VARCHAR(50) NOT NULL,
    district_id SERIAL NOT NULL
);

ALTER TABLE h_demographic ADD CONSTRAINT h_demographic_pk PRIMARY KEY ( id );

CREATE TABLE h_disposition (
    id        SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50) NOT NULL,
    disp_id   SERIAL NOT NULL
);

ALTER TABLE h_disposition ADD CONSTRAINT h_disposition_pk PRIMARY KEY ( id );

CREATE TABLE h_loan (
    id        SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50) NOT NULL,
    loan_id   SERIAL NOT NULL
);

ALTER TABLE h_loan ADD CONSTRAINT h_loan_pk PRIMARY KEY ( id );

CREATE TABLE h_permanent_order (
    id        SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50) NOT NULL,
    order_id  SERIAL NOT NULL
);

ALTER TABLE h_permanent_order ADD CONSTRAINT h_permanent_order_pk PRIMARY KEY ( id );

CREATE TABLE h_transaction (
    id        SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50) NOT NULL,
    trans_id  SERIAL NOT NULL
);

ALTER TABLE h_transaction ADD CONSTRAINT h_transaction_pk PRIMARY KEY ( id );

CREATE TABLE l_account_demographic (
    id             SERIAL NOT NULL,
    loaded_at      DATE NOT NULL,
    source         VARCHAR(50) NOT NULL,
    account_id     SERIAL NOT NULL,
    demographic_id SERIAL NOT NULL
);

ALTER TABLE l_account_demographic ADD CONSTRAINT l_account_demographic_pk PRIMARY KEY ( id );

CREATE TABLE l_account_loan (
    id         SERIAL NOT NULL,
    loaded_at  DATE NOT NULL,
    source     VARCHAR(50) NOT NULL,
    loan_id    SERIAL NOT NULL,
    account_id SERIAL NOT NULL
);

ALTER TABLE l_account_loan ADD CONSTRAINT l_account_loan_pk PRIMARY KEY ( id );

CREATE TABLE l_account_permanent_order (
    id                 SERIAL NOT NULL,
    loaded_at          DATE NOT NULL,
    source             VARCHAR(50) NOT NULL,
    permanent_order_id SERIAL NOT NULL,
    account_id         SERIAL NOT NULL
);

ALTER TABLE l_account_permanent_order ADD CONSTRAINT l_account_permanent_order_pk PRIMARY KEY ( id );

CREATE TABLE l_account_transaction (
    id             SERIAL NOT NULL,
    loaded_at      DATE NOT NULL,
    source         VARCHAR(50) NOT NULL,
    account_id     SERIAL NOT NULL,
    transaction_id SERIAL NOT NULL
);

ALTER TABLE l_account_transaction ADD CONSTRAINT l_transaction_pk PRIMARY KEY ( id );

CREATE TABLE l_client_account_disposition (
    id             SERIAL NOT NULL,
    loaded_at      DATE NOT NULL,
    source         VARCHAR(50) NOT NULL,
    account_id     SERIAL NOT NULL,
    disposition_id SERIAL NOT NULL,
    client_id      SERIAL NOT NULL
);

--  ERROR: PK name length exceeds maximum allowed length(30) 
ALTER TABLE l_client_account_disposition ADD CONSTRAINT l_client_account_disposition_pk PRIMARY KEY ( id );

CREATE TABLE l_client_demographic (
    id             SERIAL NOT NULL,
    loaded_at      DATE NOT NULL,
    source         VARCHAR(50) NOT NULL,
    client_id      SERIAL NOT NULL,
    demographic_id SERIAL NOT NULL
);

ALTER TABLE l_client_demographic ADD CONSTRAINT l_client_demographic_pk PRIMARY KEY ( id );

CREATE TABLE l_disposition_credit_card (
    id             SERIAL NOT NULL,
    loaded_at      DATE NOT NULL,
    source         VARCHAR(50) NOT NULL,
    disposition_id SERIAL NOT NULL,
    card_id        SERIAL NOT NULL
);

ALTER TABLE l_disposition_credit_card ADD CONSTRAINT l_disposition_credit_card_pk PRIMARY KEY ( id );

CREATE TABLE r_account_frequency (
    id    SERIAL NOT NULL,
    value VARCHAR(30) NOT NULL UNIQUE
);

ALTER TABLE r_account_frequency ADD CONSTRAINT r_account_frequency_pk PRIMARY KEY ( id );

CREATE TABLE r_credit_card_type (
    id    SERIAL NOT NULL,
    value VARCHAR(10) NOT NULL UNIQUE
);

ALTER TABLE r_credit_card_type ADD CONSTRAINT r_credit_card_type_pk PRIMARY KEY ( id );

CREATE TABLE r_disposition_type (
    id    SERIAL NOT NULL,
    value VARCHAR(10) NOT NULL UNIQUE
);

ALTER TABLE r_disposition_type ADD CONSTRAINT r_disposition_type_pk PRIMARY KEY ( id );

CREATE TABLE r_k_symbol (
    id    SERIAL NOT NULL,
    value VARCHAR(20) NOT NULL UNIQUE
);

ALTER TABLE r_k_symbol ADD CONSTRAINT r_k_symbol_pk PRIMARY KEY ( id );

CREATE TABLE r_loan_status (
    id    SERIAL NOT NULL,
    value VARCHAR(1) NOT NULL UNIQUE
);

ALTER TABLE r_loan_status ADD CONSTRAINT r_loan_status_pk PRIMARY KEY ( id );

CREATE TABLE r_partner (
    id      SERIAL NOT NULL,
    bank    VARCHAR(2) NOT NULL,
    account INTEGER NOT NULL,

    UNIQUE(bank, account)
);

ALTER TABLE r_partner ADD CONSTRAINT r_partner_pk PRIMARY KEY ( id );

CREATE TABLE r_transaction_operation (
    id    SERIAL NOT NULL,
    value VARCHAR(30) NOT NULL UNIQUE
);

ALTER TABLE r_transaction_operation ADD CONSTRAINT r_transaction_operation_pk PRIMARY KEY ( id );

CREATE TABLE r_transaction_type (
    id    SERIAL NOT NULL,
    value VARCHAR(10) NOT NULL UNIQUE
);

ALTER TABLE r_transaction_type ADD CONSTRAINT r_transaction_type_pk PRIMARY KEY ( id );

CREATE TABLE s_account (
    account_id SERIAL NOT NULL,
    loaded_at  DATE NOT NULL,
    source     VARCHAR(50) NOT NULL,
    "date"     DATE,
    frequency  INTEGER
);

ALTER TABLE s_account ADD CONSTRAINT s_account_pk PRIMARY KEY ( loaded_at,
                                                                account_id );

CREATE TABLE s_client (
    client_id    SERIAL NOT NULL,
    loaded_at    DATE NOT NULL,
    source       VARCHAR(50) NOT NULL,
    birth_number INTEGER
);

ALTER TABLE s_client ADD CONSTRAINT s_client_pk PRIMARY KEY ( loaded_at,
                                                              client_id );

CREATE TABLE s_credit_card (
    card_id   SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50) NOT NULL,
    type      INTEGER,
    issued    TIMESTAMP
);

ALTER TABLE s_credit_card ADD CONSTRAINT s_credit_card_pk PRIMARY KEY ( loaded_at,
                                                                        card_id );

CREATE TABLE s_demographic (
    demographic_id                     SERIAL NOT NULL,
    loaded_at                          DATE NOT NULL,
    source                             VARCHAR(50) NOT NULL,
    district_name                      VARCHAR(50),
    region                             VARCHAR(50),
    inhabitants                        INTEGER,
    municip_inhabitants_0_499          INTEGER,
    municip_inhabitants_500_1999       INTEGER,
    municip_inhabitants_2000_9999      INTEGER,
    municip_inhabitants_10000_inf      INTEGER,
    cities                             INTEGER,
    urban_inhabitants_ratio            FLOAT,
    avg_salary                         INTEGER,
    unemployment_rate_95               FLOAT,
    unemployment_rate_96               FLOAT, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    enterpreneurs_per_1000_inhabitants INTEGER,
    commited_crimes_95                 INTEGER,
    commited_crimes_96                 INTEGER
);

ALTER TABLE s_demographic ADD CONSTRAINT s_demographic_data_pk PRIMARY KEY ( loaded_at,
                                                                             demographic_id );

CREATE TABLE s_disposition (
    disposition_id SERIAL NOT NULL,
    loaded_at      DATE NOT NULL,
    source         VARCHAR(50) NOT NULL,
    type           INTEGER
);

ALTER TABLE s_disposition ADD CONSTRAINT s_client_pkv1 PRIMARY KEY ( loaded_at,
                                                                     disposition_id );

CREATE TABLE s_loan (
    loan_id   SERIAL NOT NULL,
    loaded_at DATE NOT NULL,
    source    VARCHAR(50) NOT NULL,
    "date"    DATE,
    amount    INTEGER,
    duration  INTEGER,
    payments  DECIMAL,
    status    INTEGER
);

ALTER TABLE s_loan ADD CONSTRAINT s_loan_pk PRIMARY KEY ( loaded_at,
                                                          loan_id );

CREATE TABLE s_permanent_order (
    permanent_order_id SERIAL NOT NULL,
    loaded_at          DATE NOT NULL,
    source             VARCHAR(50) NOT NULL,
    partner            INTEGER,
    amount             DECIMAL,
    k_symbol           INTEGER
);

ALTER TABLE s_permanent_order ADD CONSTRAINT s_permanent_order_pk PRIMARY KEY ( loaded_at,
                                                                                permanent_order_id );

CREATE TABLE s_transaction (
    transaction_id SERIAL NOT NULL,
    loaded_at      DATE NOT NULL,
    source         VARCHAR(50) NOT NULL,
    "date"         DATE,
    type           INTEGER,
    operation      INTEGER,
    amount         DECIMAL,
    balance        DECIMAL,
    k_symbol       INTEGER,
    partner        INTEGER
);

ALTER TABLE s_transaction ADD CONSTRAINT s_transaction_pk PRIMARY KEY ( loaded_at,
                                                                        transaction_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_account_demographic
    ADD CONSTRAINT h_account_l_account_demographic FOREIGN KEY ( account_id )
        REFERENCES h_account ( id )
            ON DELETE CASCADE;

ALTER TABLE l_account_loan
    ADD CONSTRAINT h_account_l_account_loan FOREIGN KEY ( account_id )
        REFERENCES h_account ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_account_permanent_order
    ADD CONSTRAINT h_account_l_account_permanent_order FOREIGN KEY ( account_id )
        REFERENCES h_account ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_account_transaction
    ADD CONSTRAINT h_account_l_account_transaction FOREIGN KEY ( transaction_id )
        REFERENCES h_transaction ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_client_account_disposition
    ADD CONSTRAINT h_account_l_client_account_disposition FOREIGN KEY ( client_id )
        REFERENCES h_client ( id )
            ON DELETE CASCADE;

ALTER TABLE s_account
    ADD CONSTRAINT h_account_s_account FOREIGN KEY ( account_id )
        REFERENCES h_account ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_client_account_disposition
    ADD CONSTRAINT h_client_l_client_account_disposition FOREIGN KEY ( account_id )
        REFERENCES h_account ( id )
            ON DELETE CASCADE;

ALTER TABLE l_client_demographic
    ADD CONSTRAINT h_client_l_client_demographic FOREIGN KEY ( demographic_id )
        REFERENCES h_demographic ( id )
            ON DELETE CASCADE;

ALTER TABLE s_client
    ADD CONSTRAINT h_client_s_client FOREIGN KEY ( client_id )
        REFERENCES h_client ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_disposition_credit_card
    ADD CONSTRAINT h_credit_card_l_card_disposition FOREIGN KEY ( disposition_id )
        REFERENCES h_disposition ( id )
            ON DELETE CASCADE;

ALTER TABLE s_credit_card
    ADD CONSTRAINT h_credit_card_s_credit_card FOREIGN KEY ( card_id )
        REFERENCES h_credit_card ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_account_demographic
    ADD CONSTRAINT h_demographic_l_account_demographic FOREIGN KEY ( demographic_id )
        REFERENCES h_demographic ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_client_demographic
    ADD CONSTRAINT h_demographic_l_client_demographic FOREIGN KEY ( client_id )
        REFERENCES h_client ( id )
            ON DELETE CASCADE;

ALTER TABLE s_demographic
    ADD CONSTRAINT h_demographic_s_demographic FOREIGN KEY ( demographic_id )
        REFERENCES h_demographic ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_disposition_credit_card
    ADD CONSTRAINT h_disposition_l_card_disposition FOREIGN KEY ( card_id )
        REFERENCES h_credit_card ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_client_account_disposition
    ADD CONSTRAINT h_disposition_l_client_account_disposition FOREIGN KEY ( disposition_id )
        REFERENCES h_disposition ( id )
            ON DELETE CASCADE;

ALTER TABLE s_disposition
    ADD CONSTRAINT h_disposition_s_disposition FOREIGN KEY ( disposition_id )
        REFERENCES h_disposition ( id )
            ON DELETE CASCADE;

ALTER TABLE l_account_loan
    ADD CONSTRAINT h_loan_l_account_loan FOREIGN KEY ( loan_id )
        REFERENCES h_loan ( id )
            ON DELETE CASCADE;

ALTER TABLE s_loan
    ADD CONSTRAINT h_loan_s_loan FOREIGN KEY ( loan_id )
        REFERENCES h_loan ( id )
            ON DELETE CASCADE;

ALTER TABLE l_account_permanent_order
    ADD CONSTRAINT h_permanent_order FOREIGN KEY ( permanent_order_id )
        REFERENCES h_permanent_order ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE s_permanent_order
    ADD CONSTRAINT h_permanent_order_s_permanent_order FOREIGN KEY ( permanent_order_id )
        REFERENCES h_permanent_order ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE l_account_transaction
    ADD CONSTRAINT h_transaction_l_account_transaction FOREIGN KEY ( account_id )
        REFERENCES h_account ( id )
            ON DELETE CASCADE;

ALTER TABLE s_transaction
    ADD CONSTRAINT h_transaction_s_transaction FOREIGN KEY ( transaction_id )
        REFERENCES h_transaction ( id )
            ON DELETE CASCADE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            31
-- CREATE INDEX                             0
-- ALTER TABLE                             55
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                  14
-- WARNINGS                                 0
