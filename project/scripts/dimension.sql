-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-01-26 00:34:34 EET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE d_account (
    id         INTEGER NOT NULL,
    account_id INTEGER NOT NULL
);

ALTER TABLE d_account ADD CONSTRAINT d_account_pk PRIMARY KEY ( id );

CREATE TABLE d_account_frequency (
    id    INTEGER NOT NULL,
    value VARCHAR(30) NOT NULL
);

ALTER TABLE d_account_frequency ADD CONSTRAINT d_account_frequency_pk PRIMARY KEY ( id );

CREATE TABLE d_client (
    id           INTEGER NOT NULL,
    client_id    INTEGER NOT NULL,
    birth_number INTEGER
);

ALTER TABLE d_client ADD CONSTRAINT d_client_pk PRIMARY KEY ( id );

CREATE TABLE d_credit_card (
    id      INTEGER NOT NULL,
    card_id INTEGER NOT NULL
);

ALTER TABLE d_credit_card ADD CONSTRAINT d_credit_card_pk PRIMARY KEY ( id );

CREATE TABLE d_credit_card_type (
    id    INTEGER NOT NULL,
    value VARCHAR(10) NOT NULL
);

ALTER TABLE d_credit_card_type ADD CONSTRAINT d_credit_card_type_pk PRIMARY KEY ( id );

CREATE TABLE d_date (
    id    INTEGER NOT NULL,
    year  INTEGER,
    month SMALLINT,
    day   SMALLINT
);

ALTER TABLE d_date ADD CONSTRAINT d_date_pk PRIMARY KEY ( id );

CREATE TABLE d_demographic (
    id                                 INTEGER NOT NULL,
    district_id                        INTEGER NOT NULL,
    district_name                      VARCHAR(50),
    region                             VARCHAR(50),
    inhabitants                        INTEGER,
    municip_inhabitants_0_499          INTEGER,
    municip_inhabitants_500_1999       INTEGER,
    municip_inhabitants_2000_9999      INTEGER,
    municip_inhabitants_10000_inf      INTEGER,
    cities                             INTEGER,
    urban_inhabitants_ratio            FLOAT,
    avg_salary                         INTEGER,
    unemployment_rate_95               FLOAT,
    unemployment_rate_96               FLOAT, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    enterpreneurs_per_1000_inhabitants INTEGER,
    commited_crimes_95                 INTEGER,
    commited_crimes_96                 INTEGER
);

ALTER TABLE d_demographic ADD CONSTRAINT d_demographic_data_pk PRIMARY KEY ( id );

CREATE TABLE d_disposition_type (
    id    INTEGER NOT NULL,
    value VARCHAR(10) NOT NULL
);

ALTER TABLE d_disposition_type ADD CONSTRAINT d_disposition_type_pk PRIMARY KEY ( id );

CREATE TABLE d_k_symbol (
    id    INTEGER NOT NULL,
    value VARCHAR(20) NOT NULL
);

ALTER TABLE d_k_symbol ADD CONSTRAINT d_k_symbol_pk PRIMARY KEY ( id );

CREATE TABLE d_loan (
    id       INTEGER NOT NULL,
    loan_id  INTEGER NOT NULL,
    duration INTEGER
);

ALTER TABLE d_loan ADD CONSTRAINT d_loan_pk PRIMARY KEY ( id );

CREATE TABLE d_loan_status (
    id    INTEGER NOT NULL,
    value VARCHAR(1) NOT NULL
);

ALTER TABLE d_loan_status ADD CONSTRAINT d_loan_status_pk PRIMARY KEY ( id );

CREATE TABLE d_partner (
    id      INTEGER NOT NULL,
    bank    VARCHAR(2) NOT NULL,
    account INTEGER NOT NULL
);

ALTER TABLE d_partner ADD CONSTRAINT d_partner_pk PRIMARY KEY ( id );

CREATE TABLE d_permanent_order (
    id       INTEGER NOT NULL,
    order_id INTEGER NOT NULL
);

ALTER TABLE d_permanent_order ADD CONSTRAINT d_permanent_order_pk PRIMARY KEY ( id );

CREATE TABLE d_time (
    id     INTEGER NOT NULL,
    hour   SMALLINT,
    minute SMALLINT
);

ALTER TABLE d_time ADD CONSTRAINT d_time_pk PRIMARY KEY ( id );

CREATE TABLE d_transaction (
    id       INTEGER NOT NULL,
    trans_id INTEGER NOT NULL
);

ALTER TABLE d_transaction ADD CONSTRAINT d_transaction_pk PRIMARY KEY ( id );

CREATE TABLE d_transaction_operation (
    id    INTEGER NOT NULL,
    value VARCHAR(30) NOT NULL
);

ALTER TABLE d_transaction_operation ADD CONSTRAINT d_transaction_operation_pk PRIMARY KEY ( id );

CREATE TABLE d_transaction_type (
    id    INTEGER NOT NULL,
    value VARCHAR(10) NOT NULL
);

ALTER TABLE d_transaction_type ADD CONSTRAINT d_transaction_type_pk PRIMARY KEY ( id );

CREATE TABLE f_account (
    account_id       INTEGER NOT NULL,
    client_id        INTEGER NOT NULL,
    demographic_id   INTEGER NOT NULL,
    "date"           INTEGER NOT NULL,
    disposition_type INTEGER NOT NULL,
    frequency        INTEGER NOT NULL
);

ALTER TABLE f_account
    ADD CONSTRAINT f_account_pk PRIMARY KEY ( account_id,
                                              client_id,
                                              "date",
                                              disposition_type,
                                              demographic_id,
                                              frequency );

CREATE TABLE f_client (
    district_id INTEGER NOT NULL,
    client_id   INTEGER NOT NULL
);

ALTER TABLE f_client ADD CONSTRAINT f_client_demographic_pk PRIMARY KEY ( district_id,
                                                                          client_id );

CREATE TABLE f_credit_card (
    card_id     INTEGER NOT NULL,
    account_id  INTEGER NOT NULL,
    client_id   INTEGER NOT NULL,
    issued_date INTEGER NOT NULL,
    issued_time INTEGER NOT NULL,
    type        INTEGER NOT NULL
);

ALTER TABLE f_credit_card
    ADD CONSTRAINT f_disposition_credit_card_pk PRIMARY KEY ( card_id,
                                                              account_id,
                                                              issued_date,
                                                              issued_time,
                                                              type,
                                                              client_id );

CREATE TABLE f_loan (
    account_id INTEGER NOT NULL,
    loan_id    INTEGER NOT NULL,
    "date"     INTEGER NOT NULL,
    status     INTEGER NOT NULL,
    amount     INTEGER,
    payments   DECIMAL
);

ALTER TABLE f_loan
    ADD CONSTRAINT f_account_loan_pk PRIMARY KEY ( account_id,
                                                   loan_id,
                                                   "date",
                                                   status );

CREATE TABLE f_permanent_order (
    account_id INTEGER NOT NULL,
    order_id   INTEGER NOT NULL,
    k_symbol   INTEGER NOT NULL,
    partner    INTEGER NOT NULL,
    amount     DECIMAL
);

ALTER TABLE f_permanent_order
    ADD CONSTRAINT f_account_permanent_order_pk PRIMARY KEY ( account_id,
                                                              order_id,
                                                              k_symbol,
                                                              partner );

CREATE TABLE f_transaction (
    transaction_id INTEGER NOT NULL,
    account_id     INTEGER NOT NULL,
    k_symbol       INTEGER NOT NULL,
    partner        INTEGER NOT NULL,
    "date"         INTEGER NOT NULL,
    type           INTEGER NOT NULL,
    operation      INTEGER NOT NULL,
    amount         DECIMAL,
    balance        DECIMAL
);

ALTER TABLE f_transaction
    ADD CONSTRAINT f_account_transaction_pk PRIMARY KEY ( transaction_id,
                                                          account_id,
                                                          k_symbol,
                                                          partner,
                                                          "date",
                                                          type,
                                                          operation );

ALTER TABLE f_account
    ADD CONSTRAINT d_account_f_account FOREIGN KEY ( account_id )
        REFERENCES d_account ( id )
            ON DELETE CASCADE;

ALTER TABLE f_loan
    ADD CONSTRAINT d_account_f_account_loan FOREIGN KEY ( account_id )
        REFERENCES d_account ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_permanent_order
    ADD CONSTRAINT d_account_f_account_permanent_order FOREIGN KEY ( account_id )
        REFERENCES d_account ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_transaction
    ADD CONSTRAINT d_account_f_account_transaction FOREIGN KEY ( account_id )
        REFERENCES d_account ( id )
            ON DELETE CASCADE;

ALTER TABLE f_credit_card
    ADD CONSTRAINT d_account_f_credit_card FOREIGN KEY ( account_id )
        REFERENCES d_account ( id )
            ON DELETE CASCADE;

ALTER TABLE f_account
    ADD CONSTRAINT d_account_frequency_f_account FOREIGN KEY ( frequency )
        REFERENCES d_account_frequency ( id )
            ON DELETE CASCADE;

ALTER TABLE f_account
    ADD CONSTRAINT d_client_f_account FOREIGN KEY ( client_id )
        REFERENCES d_client ( id )
            ON DELETE CASCADE;

ALTER TABLE f_client
    ADD CONSTRAINT d_client_f_client_demographic FOREIGN KEY ( client_id )
        REFERENCES d_client ( id )
            ON DELETE CASCADE;

ALTER TABLE f_credit_card
    ADD CONSTRAINT d_client_f_credit_card FOREIGN KEY ( client_id )
        REFERENCES d_client ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_credit_card
    ADD CONSTRAINT d_credit_card_f_disposition_credit_card FOREIGN KEY ( card_id )
        REFERENCES d_credit_card ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_credit_card
    ADD CONSTRAINT d_credit_card_type_f_credit_card FOREIGN KEY ( type )
        REFERENCES d_credit_card_type ( id )
            ON DELETE CASCADE;

ALTER TABLE f_account
    ADD CONSTRAINT d_date_f_account FOREIGN KEY ( "date" )
        REFERENCES d_date ( id )
            ON DELETE CASCADE;

ALTER TABLE f_loan
    ADD CONSTRAINT d_date_f_account_loan FOREIGN KEY ( "date" )
        REFERENCES d_date ( id )
            ON DELETE CASCADE;

ALTER TABLE f_credit_card
    ADD CONSTRAINT d_date_f_credit_card FOREIGN KEY ( issued_date )
        REFERENCES d_date ( id )
            ON DELETE CASCADE;

ALTER TABLE f_transaction
    ADD CONSTRAINT d_date_f_transaction FOREIGN KEY ( "date" )
        REFERENCES d_date ( id )
            ON DELETE CASCADE;

ALTER TABLE f_account
    ADD CONSTRAINT d_demographic_f_account FOREIGN KEY ( demographic_id )
        REFERENCES d_demographic ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_client
    ADD CONSTRAINT d_demographic_f_client_demographic FOREIGN KEY ( district_id )
        REFERENCES d_demographic ( id )
            ON DELETE CASCADE;

ALTER TABLE f_account
    ADD CONSTRAINT d_disposition_type FOREIGN KEY ( disposition_type )
        REFERENCES d_disposition_type ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_transaction
    ADD CONSTRAINT d_k_symbol_f_account_transaction FOREIGN KEY ( k_symbol )
        REFERENCES d_k_symbol ( id )
            ON DELETE CASCADE;

ALTER TABLE f_loan
    ADD CONSTRAINT d_loan_f_account_loan FOREIGN KEY ( loan_id )
        REFERENCES d_loan ( id )
            ON DELETE CASCADE;

ALTER TABLE f_loan
    ADD CONSTRAINT d_loan_status_f_loan FOREIGN KEY ( status )
        REFERENCES d_loan_status ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_permanent_order
    ADD CONSTRAINT d_partner_f_account_permanent_order FOREIGN KEY ( partner )
        REFERENCES d_partner ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_transaction
    ADD CONSTRAINT d_partner_f_account_transaction FOREIGN KEY ( partner )
        REFERENCES d_partner ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_permanent_order
    ADD CONSTRAINT d_payment_k_symbol_f_account_permanent_order FOREIGN KEY ( k_symbol )
        REFERENCES d_k_symbol ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_permanent_order
    ADD CONSTRAINT d_permanent_order_f_account_permanent_order FOREIGN KEY ( order_id )
        REFERENCES d_permanent_order ( id )
            ON DELETE CASCADE;

ALTER TABLE f_credit_card
    ADD CONSTRAINT d_time_f_credit_card FOREIGN KEY ( issued_time )
        REFERENCES d_time ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_transaction
    ADD CONSTRAINT d_transaction_f_account_transaction FOREIGN KEY ( transaction_id )
        REFERENCES d_transaction ( id )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE f_transaction
    ADD CONSTRAINT d_transaction_operation_f_transaction FOREIGN KEY ( operation )
        REFERENCES d_transaction_operation ( id )
            ON DELETE CASCADE;

ALTER TABLE f_transaction
    ADD CONSTRAINT d_transaction_type FOREIGN KEY ( type )
        REFERENCES d_transaction_type ( id )
            ON DELETE CASCADE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            23
-- CREATE INDEX                             0
-- ALTER TABLE                             52
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                  13
-- WARNINGS                                 0
